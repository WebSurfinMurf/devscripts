#!/usr/bin/env bash
set -euo pipefail   # exit on error, undefined var, or pipeline failure

# check for required project name
if [ $# -ne 1 ]; then
  echo "Usage: $0 <GitHub-project-name>"
  echo "Example: $0 MyNewApp"
  exit 1
fi

PROJECT="$1"
BASE_DIR="${HOME}/projects"
TARGET_DIR="${BASE_DIR}/${PROJECT}"
REPO_SSH="git@github.com:WebSurfinMurf/${PROJECT}.git"
DEFAULT_BRANCH="main"

echo "ðŸ”§ pullcode for '${PROJECT}' â†’ ${TARGET_DIR}"

if [ -d "${TARGET_DIR}/.git" ]; then
  # existing repo: pull updates
  echo "ðŸ“‚ Found existing repo; pulling latest on '${DEFAULT_BRANCH}'â€¦"
  cd "${TARGET_DIR}"
  git fetch --depth=1 origin "${DEFAULT_BRANCH}"
  git checkout "${DEFAULT_BRANCH}"
  git reset --hard "origin/${DEFAULT_BRANCH}"
  echo "âœ… Updated ${PROJECT} to latest ${DEFAULT_BRANCH}."
else
  # new clone
  echo "ðŸ“‚ Directory not found; cloning ${PROJECT} via SSHâ€¦"
  mkdir -p "${TARGET_DIR}"
  git clone --depth 1 --branch "${DEFAULT_BRANCH}" "${REPO_SSH}" "${TARGET_DIR}"
  echo "âœ… Cloned ${PROJECT} into ${TARGET_DIR}."
fi
